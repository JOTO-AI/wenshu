services:
  # 后端API服务
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: wenshu-api
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3001,http://localhost:3000,http://localhost}
      - API_PORT=${API_PORT:-8000}
    ports:
      - '${API_PORT:-8000}:8000'
    networks:
      - wenshu-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # 前端Web应用
  web:
    build:
      context: .
      dockerfile: ./apps/web-app/Dockerfile
    container_name: wenshu-web
    restart: unless-stopped
    ports:
      - '${WEB_PORT:-80}:80'
    depends_on:
      api:
        condition: service_healthy
    networks:
      - wenshu-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:80/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # Nginx反向代理（可选，用于生产环境）
  nginx:
    image: nginx:alpine
    container_name: wenshu-proxy
    restart: unless-stopped
    ports:
      - '${PROXY_PORT:-8080}:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
      - api
    networks:
      - wenshu-network
    profiles:
      - production
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

networks:
  wenshu-network:
    driver: bridge
    name: wenshu-network

# 可选：添加数据持久化卷
volumes:
  api_data:
    driver: local
  logs:
    driver: local
